<?php

namespace AppBundle\Repository;
use Doctrine\ORM\EntityRepository;

/**
 * PersonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonRepository extends EntityRepository
{
	public function create($person)
	{
		$em = $this->getEntityManager();
		$em->persist($person);
		$em->flush();
		return $person;
	}

	public function findPersonsBySearch(array $search) // search is an array...
	{
        $freetxtsearch = array(); // $fieldsearch
        foreach ($search as $s) {
            $freetxtsearch = array_merge($freetxtsearch, $this->createQueryBuilder('Person')
                ->select('Person')
                ->where('Person.field LIKE :searchTerm')
                ->orWhere('Person.field LIKE :searchTerm')
                ->setParameter('searchTerm', '%'.$s.'%')
                ->getQuery()
                ->getResult()); // returns an array, ja?
        }
        $firstNamesearch = $this->createQueryBuilder('Person')
			->select('Person')
			->where('Person.firstName IN (:searchTerm)')
			->setParameter('searchTerm', $search)
			->getQuery()
			->getResult(); // returns an array, ja?
        $lastNamesearch = $this->createQueryBuilder('Person')
            ->select('Person')
            ->where('Person.lastName IN (:searchTerm)')
            ->setParameter('searchTerm', $search)
            ->getQuery()
            ->getResult(); // returns an array, ja?
        $result = array_merge(array_merge($firstNamesearch,$lastNamesearch),$freetxtsearch); // Merge is binary, still extendable with expertise field
        $result = array_unique($result);
        return $result;
	}

	public function findEditedPersons()
	{
		return $this->createQueryBuilder('Person')
			->select('Person')
			->where('Person.version > 0')
			->getQuery()
			->getResult();
	}
	
}
